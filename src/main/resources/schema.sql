CREATE TABLE IF NOT EXISTS users
    (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL ,
        name VARCHAR NOT NULL ,
        email VARCHAR NOT NULL ,
        CONSTRAINT user_pk PRIMARY KEY (id),
        CONSTRAINT USER_EMAIL_UQ UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    requestor_id BIGINT,
    description VARCHAR NOT NULL,
    create_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT request_pk PRIMARY KEY (id),
    CONSTRAINT REQUEST_ON_REQUESTOR_FK FOREIGN KEY (requestor_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR NOT NULL,
    description VARCHAR NOT NULL,
    available BOOLEAN NOT NULL,
    owner_id BIGINT,
    request_id BIGINT,
    CONSTRAINT item_pk PRIMARY KEY (id),
    CONSTRAINT ITEM_ON_OWNER_FK FOREIGN KEY (owner_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT ITEM_ON_REQUEST_FK FOREIGN KEY (request_id) REFERENCES requests (id)
);

CREATE TABLE IF NOT EXISTS booking
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status VARCHAR NOT NULL,
    booker_id BIGINT,
    item_id BIGINT,
    CONSTRAINT booking_pk PRIMARY KEY (id),
    CONSTRAINT BOOKING_ON_BOOKER_FK FOREIGN KEY (booker_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT BOOKING_ON_ITEM_FK FOREIGN KEY (item_id) REFERENCES items (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    author_id BIGINT,
    item_id BIGINT,
    text VARCHAR NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT comments_pk PRIMARY KEY (id),
    CONSTRAINT COMMENTS_ON_AUTHOR_FK FOREIGN KEY (author_id) REFERENCES users (id),
    CONSTRAINT COMMENT_ON_ITEM_FK FOREIGN KEY (item_id) REFERENCES items (id) ON DELETE CASCADE
);

